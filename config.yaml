# Persistent-memory-Neko 配置文件示例
# 可以复制此文件为 config.yaml 进行实际配置

# API 配置
api:
  # API密钥，用于验证API请求
  key: "sk-jivwbgqsesocbzkggntyzjwlkvlyhuiaphesburlvyswzsfc"
  # API基础URL，不同AI服务提供商可能有不同的URL
  base_url: "https://api.siliconflow.cn/v1"
  # API请求超时时间（秒）
  timeout: 30
  # 是否开启API密钥校验
  auth_enabled: false
  # API请求速率限制（每分钟请求次数）
  rate_limit: 60

# 模型配置
model:
  # 使用的大语言模型名称
  name: "Pro/deepseek-ai/DeepSeek-V3"
  # 温度参数，控制随机性（0-1），越高越随机
  temperature: 0.7
  # 最大生成token数
  max_tokens: 4096
  # Top-p参数，控制生成的多样性
  top_p: 0.9
  # 频率惩罚参数
  frequency_penalty: 0
  # 存在惩罚参数
  presence_penalty: 0

# 嵌入模型配置
embedding:
  # 使用的嵌入模型
  model: "BAAI/bge-m3"
  # 超时时间（秒）
  timeout: 100
  # 向量维度
  dimension: 1024

# 重排序配置
rerank:
  # 是否启用重排序
  enabled: true
  # 重排序模型
  model: "BAAI/bge-reranker-v2-m3"
  # 重排序返回的结果数量
  top_n: 5

# 检索配置
retrieval:
  # 图关联深度，影响搜索相关记忆的范围
  graph_related_depth: 2
  # 最小相似度阈值，低于此值的记忆不会被返回
  min_similarity: 0.7
  # 过滤相似度阈值，用于过滤重复记忆
  filter_similarity_threshold: 0.8
  # 分页查询时每页的默认数量
  page_size: 10
  # 最大页面大小限制
  max_page_size: 100

# 存储配置
storage:
  # Neo4j配置
  neo4j:
    # Neo4j数据库URI
    uri: "bolt://localhost:7687"
    # Neo4j用户名
    user: "neo4j"
    # Neo4j密码
    password: "12345678"
    # 连接池大小
    pool_size: 50
  
  # FAISS配置
  faiss:
    # 向量维度
    dimension: 1024
    # 索引类型 (flat, ivf, hnsw等)
    index_type: "flat"
    # 是否定期重建索引
    rebuild_index: false
    # 索引文件路径
    index_path: "data/faiss_index.pkl"
    # 最大索引大小（记录数，超过会触发重建）
    max_index_size: 1000000
    
  # MySQL配置
  mysql:
    # MySQL主机地址
    host: "localhost"
    # MySQL端口
    port: 3306
    # MySQL用户名
    user: "root"
    # MySQL密码
    password: "root"
    # MySQL数据库名
    database: "neko_ai"
    # 连接池大小
    pool_size: 5

# 多对话配置
conversation:
  # 默认对话ID
  default_id: "default"
  # 最大对话数量
  max_conversations: 100
  # 对话标题最大长度
  title_max_length: 100
  # 对话上下文窗口大小（对话轮数）
  context_window_size: 15
  # 是否优先从MySQL获取上下文
  use_mysql_context: true

# 应用配置
app:
  # 应用名称
  name: "Neko API"
  # 应用版本
  version: "1.1.0"
  # 应用描述
  description: "Neok AI助手API"
  # 是否开启调试模式
  debug: false
  # 服务器主机地址
  host: "localhost"
  # 服务器端口
  port: 9999

# 文件路径配置
paths:
  # 基础提示词文件路径
  base_md: "base.md"
  # 人设提示词文件路径
  prompt_md: "prompt.md"
  # 日志目录
  logs_dir: "logs"
  # 备份目录
  backups_dir: "backups"
  # FAISS索引文件路径
  faiss_index_path: "data/faiss_index.pkl"

# 日志配置
logging:
  # 日志级别 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
  level: "INFO"
  # 是否输出到控制台
  console: true
  # 是否输出到文件
  file: true
  # 日志文件大小上限（MB）
  max_size: 10
  # 保留的日志文件数量
  backup_count: 5
  # 是否记录API请求
  log_requests: true

# 用户信息
user:
  # 用户名
  username: "admin"
  # 密码哈希
  password_hash: "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918"  # admin的SHA-256哈希
  # 用户邮箱
  email: "admin@example.com"
  # 用户角色 (admin, user)
  role: "admin"
  # 是否启用
  enabled: true
  # 创建时间
  created_at: "2023-01-01 00:00:00"

# 添加 SerpAPI 配置
serpapi:
  api_key: ""  # 您的 SerpAPI API 密钥
  enabled: true  # 是否启用 SerpAPI

# 网络搜索配置
web_search:
  # 是否启用网络搜索
  enabled: true
  # 默认搜索引擎 (langchain, bocha, google, serpapi)
  default_engine: "langchain"
  # 搜索结果数量
  num_results: 5
  # LangChain搜索配置
  langchain:
    # 是否启用LangChain搜索
    enabled: true
    # 搜索类型: duckduckgo, tavily
    type: "duckduckgo"
    # Tavily搜索API密钥（仅在type为tavily时需要）
    api_key: ""
  # 博查搜索配置
  bocha:
    api_key: "sk-979dcdf9bc144b289d3370bdee35a6a0"
    api_url: "https://api.bochaai.com/v1/web-search"
    enabled: true
  # Google搜索配置
  google:
    api_key: ""
    cse_id: ""
    enabled: false

# TTS配置
tts:
  enabled: true
  fish_api_key: "f43ead2bab504ee7922d75d425a02886"  # Fish Audio API 密钥
  fish_reference_id: "7f92f8afb8ec43bf81429cc1c9199cb1"  # 芙宁娜语音
  model: "speech-1.6"  # TTS模型，可选值: speech-1.5, speech-1.6, agent-x0
  developer_id: ""  # 开发者ID，加入Fish Audio开发者计划后可获得
  speed: 1.0  # 语速 (0.5-2.0)
  volume: 1.0  # 音量 (0.1-2.0)
  pitch: 0.0   # 音高 (-12.0-12.0)

# 其他可能缺失的配置项
# ... 